"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[1710],{4516:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"api/error-codes","title":"Error Codes","description":"Comprehensive error handling reference for flutterinapppurchase v6.0.0. This guide covers all error codes, their meanings, and how to handle them effectively.","source":"@site/docs/api/error-codes.md","sourceDirName":"api","slug":"/api/error-codes","permalink":"/docs/api/error-codes","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/api/error-codes.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Error Codes","sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"Listeners","permalink":"/docs/api/listeners"},"next":{"title":"Basic Store","permalink":"/docs/examples/basic-store"}}');var a=n(4848),i=n(8453);const s={title:"Error Codes",sidebar_position:5},t="Error Codes",d={},l=[{value:"ErrorCode Enum",id:"errorcode-enum",level:2},{value:"PurchaseError Class",id:"purchaseerror-class",level:2},{value:"Common Error Codes",id:"common-error-codes",level:2},{value:"User-Related Errors",id:"user-related-errors",level:3},{value:"eUserCancelled",id:"eusercancelled",level:4},{value:"eUserError",id:"eusererror",level:4},{value:"eAlreadyOwned",id:"ealreadyowned",level:4},{value:"Network &amp; Service Errors",id:"network--service-errors",level:3},{value:"eNetworkError",id:"enetworkerror",level:4},{value:"eServiceError",id:"eserviceerror",level:4},{value:"eRemoteError",id:"eremoteerror",level:4},{value:"Product &amp; Availability Errors",id:"product--availability-errors",level:3},{value:"eItemUnavailable",id:"eitemunavailable",level:4},{value:"eProductNotFound",id:"eproductnotfound",level:4},{value:"Configuration &amp; Developer Errors",id:"configuration--developer-errors",level:3},{value:"eDeveloperError",id:"edevelopererror",level:4},{value:"eNotInitialized",id:"enotinitialized",level:4},{value:"eAlreadyInitialized",id:"ealreadyinitialized",level:4},{value:"Platform-Specific Mappings",id:"platform-specific-mappings",level:2},{value:"iOS Error Code Mapping",id:"ios-error-code-mapping",level:3},{value:"Android Error Code Mapping",id:"android-error-code-mapping",level:3},{value:"Error Handling Patterns",id:"error-handling-patterns",level:2},{value:"Basic Error Handler",id:"basic-error-handler",level:3},{value:"Comprehensive Error Handler",id:"comprehensive-error-handler",level:3},{value:"Retry Logic",id:"retry-logic",level:3},{value:"Error Prevention",id:"error-prevention",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Validation Checklist",id:"validation-checklist",level:3},{value:"Debugging Error Codes",id:"debugging-error-codes",level:2},{value:"Debug Logging",id:"debug-logging",level:3},{value:"Testing Error Scenarios",id:"testing-error-scenarios",level:3},{value:"Migration Notes",id:"migration-notes",level:2},{value:"See Also",id:"see-also",level:2}];function c(e){const r={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"error-codes",children:"Error Codes"})}),"\n",(0,a.jsx)(r.p,{children:"Comprehensive error handling reference for flutter_inapp_purchase v6.0.0. This guide covers all error codes, their meanings, and how to handle them effectively."}),"\n",(0,a.jsx)(r.h2,{id:"errorcode-enum",children:"ErrorCode Enum"}),"\n",(0,a.jsx)(r.p,{children:"The standardized error codes used across both platforms."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"enum ErrorCode {\n  eUnknown,                           // Unknown error\n  eUserCancelled,                     // User cancelled\n  eUserError,                         // User error\n  eItemUnavailable,                   // Item unavailable\n  eRemoteError,                       // Remote server error\n  eNetworkError,                      // Network error\n  eServiceError,                      // Service error\n  eReceiptFailed,                     // Receipt validation failed\n  eReceiptFinishedFailed,             // Receipt finish failed\n  eNotPrepared,                       // Not prepared\n  eNotEnded,                          // Not ended\n  eAlreadyOwned,                      // Already owned\n  eDeveloperError,                    // Developer error\n  eBillingResponseJsonParseError,     // JSON parse error\n  eDeferredPayment,                   // Deferred payment\n  eInterrupted,                       // Interrupted\n  eIapNotAvailable,                   // IAP not available\n  ePurchaseError,                     // Purchase error\n  eSyncError,                         // Sync error\n  eTransactionValidationFailed,       // Transaction validation failed\n  eActivityUnavailable,               // Activity unavailable\n  eAlreadyPrepared,                   // Already prepared\n  ePending,                           // Pending\n  eConnectionClosed,                  // Connection closed\n  // Additional error codes\n  eBillingUnavailable,                // Billing unavailable\n  eProductAlreadyOwned,               // Product already owned\n  ePurchaseNotAllowed,                // Purchase not allowed\n  eQuotaExceeded,                     // Quota exceeded\n  eFeatureNotSupported,               // Feature not supported\n  eNotInitialized,                    // Not initialized\n  eAlreadyInitialized,                // Already initialized\n  eClientInvalid,                     // Client invalid\n  ePaymentInvalid,                    // Payment invalid\n  ePaymentNotAllowed,                 // Payment not allowed\n  eStorekitOriginalTransactionIdNotFound, // StoreKit transaction not found\n  eNotSupported,                      // Not supported\n  eTransactionFailed,                 // Transaction failed\n  eTransactionInvalid,                // Transaction invalid\n  eProductNotFound,                   // Product not found\n  ePurchaseFailed,                    // Purchase failed\n  eTransactionNotFound,               // Transaction not found\n  eRestoreFailed,                     // Restore failed\n  eRedeemFailed,                      // Redeem failed\n  eNoWindowScene,                     // No window scene\n  eShowSubscriptionsFailed,           // Show subscriptions failed\n  eProductLoadFailed,                 // Product load failed\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"purchaseerror-class",children:"PurchaseError Class"}),"\n",(0,a.jsx)(r.p,{children:"The main error class used throughout the library."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class PurchaseError implements Exception {\n  final String name;                // Error name\n  final String message;             // Human-readable error message\n  final int? responseCode;          // Platform-specific response code\n  final String? debugMessage;       // Additional debug information\n  final ErrorCode? code;            // Standardized error code\n  final String? productId;          // Related product ID (if applicable)\n  final IAPPlatform? platform;      // Platform where error occurred\n\n  PurchaseError({\n    String? name,\n    required this.message,\n    this.responseCode,\n    this.debugMessage,\n    this.code,\n    this.productId,\n    this.platform,\n  });\n}\n"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Example Usage"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"try {\n  await FlutterInappPurchase.instance.requestPurchase(\n    request: request,\n    type: PurchaseType.inapp,\n  );\n} on PurchaseError catch (e) {\n  print('Error Code: ${e.code}');\n  print('Message: ${e.message}');\n  print('Platform: ${e.platform}');\n  print('Product: ${e.productId}');\n  print('Debug: ${e.debugMessage}');\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"common-error-codes",children:"Common Error Codes"}),"\n",(0,a.jsx)(r.h3,{id:"user-related-errors",children:"User-Related Errors"}),"\n",(0,a.jsx)(r.h4,{id:"eusercancelled",children:"eUserCancelled"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": User cancelled the purchase",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": User closes purchase dialog or cancels payment",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": No action needed - this is normal behavior",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Don't show error messages for cancellation"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eUserCancelled) {\n  // User cancelled - this is normal, don't show error\n  print('User cancelled the purchase');\n  return;\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"eusererror",children:"eUserError"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": User made an error during purchase",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Invalid payment method, insufficient funds",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Check payment method and try again",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Show helpful message about payment methods"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eUserError) {\n  showMessage('Please check your payment method and try again.');\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"ealreadyowned",children:"eAlreadyOwned"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": User already owns this product",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Attempting to purchase owned non-consumable",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Product is already available",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Unlock product or suggest restore purchases"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eAlreadyOwned) {\n  showMessage('You already own this item.');\n  // Optionally trigger restore purchases\n  await restorePurchases();\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"network--service-errors",children:"Network & Service Errors"}),"\n",(0,a.jsx)(r.h4,{id:"enetworkerror",children:"eNetworkError"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Network connectivity issues",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": No internet, poor connection, server timeout",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Check internet connection",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Show retry option"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eNetworkError) {\n  showRetryDialog(\n    'Network error. Please check your connection and try again.',\n    onRetry: () => retryPurchase(),\n  );\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"eserviceerror",children:"eServiceError"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Store service unavailable",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": App Store/Play Store service issues",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Try again later",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Show temporary error message"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eServiceError) {\n  showMessage('Store service temporarily unavailable. Please try again later.');\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"eremoteerror",children:"eRemoteError"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Remote server error",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Store backend issues",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Try again later",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Log for monitoring, show generic error"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eRemoteError) {\n  logError('Remote server error', error);\n  showMessage('Service temporarily unavailable. Please try again.');\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"product--availability-errors",children:"Product & Availability Errors"}),"\n",(0,a.jsx)(r.h4,{id:"eitemunavailable",children:"eItemUnavailable"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Product not available for purchase",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Product deleted, not in current storefront",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Contact support if expected",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Check product configuration"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eItemUnavailable) {\n  showMessage('This item is currently unavailable.');\n  // Log for investigation\n  logError('Product unavailable: ${error.productId}', error);\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"eproductnotfound",children:"eProductNotFound"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Product ID not found in store",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Invalid product ID, not published",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Contact support",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Verify product ID and store configuration"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eProductNotFound) {\n  logError('Product not found: ${error.productId}', error);\n  showMessage('Product not found. Please contact support.');\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"configuration--developer-errors",children:"Configuration & Developer Errors"}),"\n",(0,a.jsx)(r.h4,{id:"edevelopererror",children:"eDeveloperError"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": Developer configuration error",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Invalid parameters, wrong usage",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": Contact support",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Fix implementation"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eDeveloperError) {\n  logError('Developer error: ${error.message}', error);\n  showMessage('Configuration error. Please contact support.');\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"enotinitialized",children:"eNotInitialized"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": IAP not initialized",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Calling methods before ",(0,a.jsx)(r.code,{children:"initConnection()"}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": None",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Call ",(0,a.jsx)(r.code,{children:"initConnection()"})," first"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eNotInitialized) {\n  await FlutterInappPurchase.instance.initConnection();\n  // Retry the operation\n}\n"})}),"\n",(0,a.jsx)(r.h4,{id:"ealreadyinitialized",children:"eAlreadyInitialized"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Meaning"}),": IAP already initialized",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"When it occurs"}),": Calling ",(0,a.jsx)(r.code,{children:"initConnection()"})," multiple times",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"User action"}),": None",(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Developer action"}),": Check initialization state"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"if (error.code == ErrorCode.eAlreadyInitialized) {\n  // Already initialized - continue with operation\n  print('IAP already initialized');\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"platform-specific-mappings",children:"Platform-Specific Mappings"}),"\n",(0,a.jsx)(r.h3,{id:"ios-error-code-mapping",children:"iOS Error Code Mapping"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"static const Map<ErrorCode, int> ios = {\n  ErrorCode.eUnknown: 0,\n  ErrorCode.eServiceError: 1,\n  ErrorCode.eUserCancelled: 2,\n  ErrorCode.eUserError: 3,\n  ErrorCode.eItemUnavailable: 4,\n  ErrorCode.eRemoteError: 5,\n  ErrorCode.eNetworkError: 6,\n  ErrorCode.eReceiptFailed: 7,\n  ErrorCode.eReceiptFinishedFailed: 8,\n  ErrorCode.eDeveloperError: 9,\n  ErrorCode.ePurchaseError: 10,\n  ErrorCode.eSyncError: 11,\n  ErrorCode.eDeferredPayment: 12,\n  ErrorCode.eTransactionValidationFailed: 13,\n  ErrorCode.eNotPrepared: 14,\n  ErrorCode.eNotEnded: 15,\n  ErrorCode.eAlreadyOwned: 16,\n  // ... additional mappings\n};\n"})}),"\n",(0,a.jsx)(r.h3,{id:"android-error-code-mapping",children:"Android Error Code Mapping"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"static const Map<ErrorCode, String> android = {\n  ErrorCode.eUnknown: 'E_UNKNOWN',\n  ErrorCode.eUserCancelled: 'E_USER_CANCELLED',\n  ErrorCode.eUserError: 'E_USER_ERROR',\n  ErrorCode.eItemUnavailable: 'E_ITEM_UNAVAILABLE',\n  ErrorCode.eRemoteError: 'E_REMOTE_ERROR',\n  ErrorCode.eNetworkError: 'E_NETWORK_ERROR',\n  ErrorCode.eServiceError: 'E_SERVICE_ERROR',\n  ErrorCode.eReceiptFailed: 'E_RECEIPT_FAILED',\n  ErrorCode.eAlreadyOwned: 'E_ALREADY_OWNED',\n  // ... additional mappings\n};\n"})}),"\n",(0,a.jsx)(r.h2,{id:"error-handling-patterns",children:"Error Handling Patterns"}),"\n",(0,a.jsx)(r.h3,{id:"basic-error-handler",children:"Basic Error Handler"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class ErrorHandler {\n  static void handlePurchaseError(PurchaseError error) {\n    switch (error.code) {\n      case ErrorCode.eUserCancelled:\n        // Don't show error for user cancellation\n        break;\n        \n      case ErrorCode.eNetworkError:\n        showRetryDialog('Network error. Please check your connection.');\n        break;\n        \n      case ErrorCode.eAlreadyOwned:\n        showMessage('You already own this item.');\n        restorePurchases();\n        break;\n        \n      case ErrorCode.eItemUnavailable:\n        showMessage('This item is currently unavailable.');\n        break;\n        \n      case ErrorCode.eServiceError:\n        showMessage('Service temporarily unavailable. Please try again later.');\n        break;\n        \n      default:\n        showMessage('Purchase failed: ${error.message}');\n        logError('Unhandled purchase error', error);\n    }\n  }\n  \n  static void showRetryDialog(String message) {\n    // Implementation depends on your UI framework\n  }\n  \n  static void showMessage(String message) {\n    // Implementation depends on your UI framework\n  }\n  \n  static void logError(String message, PurchaseError error) {\n    // Log to your analytics/monitoring service\n    print('$message: ${error.code} - ${error.message}');\n  }\n  \n  static Future<void> restorePurchases() async {\n    try {\n      await FlutterInappPurchase.instance.restorePurchases();\n    } catch (e) {\n      print('Restore failed: $e');\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"comprehensive-error-handler",children:"Comprehensive Error Handler"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class ComprehensiveErrorHandler {\n  static void handleError(dynamic error, {String? context}) {\n    if (error is PurchaseError) {\n      _handlePurchaseError(error, context: context);\n    } else if (error is PlatformException) {\n      _handlePlatformException(error, context: context);\n    } else {\n      _handleGenericError(error, context: context);\n    }\n  }\n  \n  static void _handlePurchaseError(PurchaseError error, {String? context}) {\n    // Log error for analytics\n    _logError(error, context: context);\n    \n    switch (error.code) {\n      case ErrorCode.eUserCancelled:\n        // Silent handling - user intentionally cancelled\n        return;\n        \n      case ErrorCode.eNetworkError:\n        _showNetworkError();\n        break;\n        \n      case ErrorCode.eAlreadyOwned:\n        _handleAlreadyOwned(error.productId);\n        break;\n        \n      case ErrorCode.eItemUnavailable:\n        _handleItemUnavailable(error.productId);\n        break;\n        \n      case ErrorCode.eServiceError:\n      case ErrorCode.eRemoteError:\n        _showServiceError();\n        break;\n        \n      case ErrorCode.eDeveloperError:\n      case ErrorCode.eNotInitialized:\n        _handleConfigurationError(error);\n        break;\n        \n      case ErrorCode.eReceiptFailed:\n      case ErrorCode.eTransactionValidationFailed:\n        _handleValidationError(error);\n        break;\n        \n      case ErrorCode.eDeferredPayment:\n        _handleDeferredPayment();\n        break;\n        \n      case ErrorCode.ePending:\n        _handlePendingPurchase();\n        break;\n        \n      default:\n        _showGenericError(error.message);\n    }\n  }\n  \n  static void _showNetworkError() {\n    showDialog(\n      title: 'Connection Error',\n      message: 'Please check your internet connection and try again.',\n      actions: [\n        DialogAction('Retry', onPressed: () => _retryLastOperation()),\n        DialogAction('Cancel'),\n      ],\n    );\n  }\n  \n  static void _handleAlreadyOwned(String? productId) {\n    showDialog(\n      title: 'Already Purchased',\n      message: 'You already own this item. Would you like to restore your purchases?',\n      actions: [\n        DialogAction('Restore', onPressed: () => _restorePurchases()),\n        DialogAction('OK'),\n      ],\n    );\n  }\n  \n  static void _handleItemUnavailable(String? productId) {\n    _logError('Product unavailable: $productId');\n    showMessage('This item is currently unavailable. Please try again later.');\n  }\n  \n  static void _showServiceError() {\n    showMessage('Service temporarily unavailable. Please try again later.');\n  }\n  \n  static void _handleConfigurationError(PurchaseError error) {\n    _logError('Configuration error: ${error.message}');\n    showMessage('Configuration error. Please contact support.');\n  }\n  \n  static void _handleValidationError(PurchaseError error) {\n    _logError('Validation error: ${error.message}');\n    showMessage('Purchase validation failed. Please contact support.');\n  }\n  \n  static void _handleDeferredPayment() {\n    showMessage(\n      'Your purchase is pending approval. You will be notified when it\\'s approved.',\n    );\n  }\n  \n  static void _handlePendingPurchase() {\n    showMessage('Your purchase is being processed. Please wait...');\n  }\n  \n  static void _showGenericError(String message) {\n    showMessage('Purchase failed: $message');\n  }\n  \n  static void _logError(dynamic error, {String? context}) {\n    final contextStr = context != null ? '[$context] ' : '';\n    print('${contextStr}Error: $error');\n    \n    // Send to analytics/monitoring service\n    // Analytics.logError(error, context: context);\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"retry-logic",children:"Retry Logic"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class RetryLogic {\n  static const int maxRetries = 3;\n  static const Duration retryDelay = Duration(seconds: 2);\n  \n  static Future<T> withRetry<T>(\n    Future<T> Function() operation, {\n    bool Function(dynamic error)? shouldRetry,\n    int maxAttempts = maxRetries,\n  }) async {\n    int attempts = 0;\n    \n    while (attempts < maxAttempts) {\n      try {\n        return await operation();\n      } catch (error) {\n        attempts++;\n        \n        if (attempts >= maxAttempts) {\n          rethrow;\n        }\n        \n        // Check if we should retry this error\n        if (shouldRetry != null && !shouldRetry(error)) {\n          rethrow;\n        }\n        \n        // Only retry on specific errors\n        if (error is PurchaseError) {\n          switch (error.code) {\n            case ErrorCode.eNetworkError:\n            case ErrorCode.eServiceError:\n            case ErrorCode.eRemoteError:\n              // Retry these errors\n              await Future.delayed(retryDelay * attempts);\n              continue;\n            default:\n              // Don't retry other errors\n              rethrow;\n          }\n        }\n        \n        rethrow;\n      }\n    }\n    \n    throw Exception('Max retry attempts exceeded');\n  }\n}\n\n// Usage example\nFuture<void> makePurchaseWithRetry(String productId) async {\n  try {\n    await RetryLogic.withRetry(() async {\n      final request = RequestPurchase(\n        ios: RequestPurchaseIOS(sku: productId, quantity: 1),\n        android: RequestPurchaseAndroid(skus: [productId]),\n      );\n      \n      await FlutterInappPurchase.instance.requestPurchase(\n        request: request,\n        type: PurchaseType.inapp,\n      );\n    });\n  } catch (e) {\n    ComprehensiveErrorHandler.handleError(e, context: 'purchase');\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"error-prevention",children:"Error Prevention"}),"\n",(0,a.jsx)(r.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Always Initialize"}),": Call ",(0,a.jsx)(r.code,{children:"initConnection()"})," before other operations"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Handle All Errors"}),": Implement comprehensive error handling"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"User-Friendly Messages"}),": Show helpful messages, not technical details"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Log for Monitoring"}),": Track errors for analysis and improvement"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Graceful Degradation"}),": Continue app functionality when IAP fails"]}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"validation-checklist",children:"Validation Checklist"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class ValidationHelper {\n  static Future<bool> validateBeforePurchase(String productId) async {\n    try {\n      // Check if IAP is initialized\n      if (!FlutterInappPurchase.instance._isInitialized) {\n        await FlutterInappPurchase.instance.initConnection();\n      }\n      \n      // Check if product exists\n      final products = await FlutterInappPurchase.instance.getProducts([productId]);\n      if (products.isEmpty) {\n        throw PurchaseError(\n          code: ErrorCode.eProductNotFound,\n          message: 'Product not found: $productId',\n        );\n      }\n      \n      // Check if already owned (for non-consumables)\n      final availablePurchases = await FlutterInappPurchase.instance.getAvailablePurchases();\n      if (availablePurchases.any((p) => p.productId == productId)) {\n        throw PurchaseError(\n          code: ErrorCode.eAlreadyOwned,\n          message: 'Product already owned: $productId',\n        );\n      }\n      \n      return true;\n    } catch (e) {\n      ComprehensiveErrorHandler.handleError(e, context: 'validation');\n      return false;\n    }\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"debugging-error-codes",children:"Debugging Error Codes"}),"\n",(0,a.jsx)(r.h3,{id:"debug-logging",children:"Debug Logging"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class ErrorDebugger {\n  static void logDetailedError(PurchaseError error) {\n    print('=== Purchase Error Debug Info ===');\n    print('Code: ${error.code}');\n    print('Message: ${error.message}');\n    print('Response Code: ${error.responseCode}');\n    print('Debug Message: ${error.debugMessage}');\n    print('Product ID: ${error.productId}');\n    print('Platform: ${error.platform}');\n    print('Platform Code: ${error.getPlatformCode()}');\n    print('================================');\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"testing-error-scenarios",children:"Testing Error Scenarios"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-dart",children:"class ErrorTesting {\n  static Future<void> testErrorScenarios() async {\n    // Test network error\n    await _testNetworkError();\n    \n    // Test invalid product\n    await _testInvalidProduct();\n    \n    // Test user cancellation\n    await _testUserCancellation();\n  }\n  \n  static Future<void> _testNetworkError() async {\n    // Simulate network error conditions\n  }\n  \n  static Future<void> _testInvalidProduct() async {\n    try {\n      await FlutterInappPurchase.instance.getProducts(['invalid_product_id']);\n    } catch (e) {\n      print('Expected error for invalid product: $e');\n    }\n  }\n  \n  static Future<void> _testUserCancellation() async {\n    // Test cancellation flow\n  }\n}\n"})}),"\n",(0,a.jsx)(r.h2,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,a.jsxs)(r.p,{children:["\u26a0\ufe0f ",(0,a.jsx)(r.strong,{children:"Breaking Changes from v5.x:"})]}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Error Types"}),": ",(0,a.jsx)(r.code,{children:"PurchaseError"})," replaces simple error strings"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Error Codes"}),": New ",(0,a.jsx)(r.code,{children:"ErrorCode"})," enum for standardized handling"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Platform Codes"}),": Access via ",(0,a.jsx)(r.code,{children:"getPlatformCode()"})," method"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Null Safety"}),": All error fields are properly nullable"]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"see-also",children:"See Also"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"/docs/api/core-methods",children:"Core Methods"})," - Methods that can throw these errors"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"/docs/api/listeners",children:"Listeners"})," - Error event streams"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"/docs/guides/troubleshooting",children:"Troubleshooting Guide"})," - Solving common issues"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"/docs/api/types",children:"Types"})," - Error data structures"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>t});var o=n(6540);const a={},i=o.createContext(a);function s(e){const r=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);