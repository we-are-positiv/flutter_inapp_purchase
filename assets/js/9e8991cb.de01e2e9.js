"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[4933],{4330:e=>{e.exports=JSON.parse('{"permalink":"/blog/release-6.3.0","editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/blog/2025-08-19-6.3.0.release.md","source":"@site/blog/2025-08-19-6.3.0.release.md","title":"Version 6.3.0 - Enhanced OpenIAP Compliance & Better Testing","description":"We\'re excited to announce the release of flutterinapppurchase 6.3.0! This version brings significant improvements to OpenIAP specification compliance, enhanced type safety, critical bug fixes, and a completely reorganized test suite\u2014all while maintaining full backward compatibility.","date":"2025-08-19T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Flutter","permalink":"/blog/tags/flutter","description":"Flutter framework related topics"},{"inline":false,"label":"In-App Purchase","permalink":"/blog/tags/in-app-purchase","description":"In-app purchase implementation and best practices"}],"readingTime":5.51,"hasTruncateMarker":false,"authors":[{"name":"Hyo","title":"Maintainer of flutter_inapp_purchase & expo-iap","url":"https://github.com/hyochan","page":{"permalink":"/blog/authors/hyochan"},"socials":{"x":"https://x.com/hyodotdev","github":"https://github.com/hyochan"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"release-6.3.0","title":"Version 6.3.0 - Enhanced OpenIAP Compliance & Better Testing","authors":["hyochan"],"tags":["release","flutter","in-app-purchase"]},"unlisted":false,"prevItem":{"title":"Version 6.3.3 - Replacement Mode Migration & OpenIAP Updates","permalink":"/blog/release-6.3.3"},"nextItem":{"title":"Version 6.0.0-rc.1 - StoreKit 2 & Billing Client v8 Support","permalink":"/blog/release-6.0.0-rc"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(6540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},8574:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=i(4330),s=i(4848),t=i(8453);const a={slug:"release-6.3.0",title:"Version 6.3.0 - Enhanced OpenIAP Compliance & Better Testing",authors:["hyochan"],tags:["release","flutter","in-app-purchase"]},l="Flutter In-App Purchase 6.3.0: Enhanced OpenIAP Compliance & Better Testing",o={authorsImageUrls:[void 0]},c=[{value:"What&#39;s New in 6.3.0",id:"whats-new-in-630",level:2},{value:"Critical Bug Fixes",id:"critical-bug-fixes",level:3},{value:"Android Purchase State Mapping Fix (#524)",id:"android-purchase-state-mapping-fix-524",level:4},{value:"Deprecated Methods",id:"deprecated-methods",level:3},{value:"Enhanced OpenIAP Field Support",id:"enhanced-openiap-field-support",level:3},{value:"iOS StoreKit 2 Integration",id:"ios-storekit-2-integration",level:4},{value:"Android Google Play Enhanced Fields",id:"android-google-play-enhanced-fields",level:4},{value:"Improved Type Safety &amp; Reliability",id:"improved-type-safety--reliability",level:3},{value:"Better JSON Parsing",id:"better-json-parsing",level:4},{value:"Enhanced Subscription Detection",id:"enhanced-subscription-detection",level:4},{value:"Test Suite Overhaul",id:"test-suite-overhaul",level:3},{value:"Organized by Business Flows",id:"organized-by-business-flows",level:4},{value:"Improved Coverage",id:"improved-coverage",level:4},{value:"Migration Guide",id:"migration-guide",level:2},{value:"Migration is Seamless",id:"migration-is-seamless",level:3},{value:"Optional - Use New Fields",id:"optional---use-new-fields",level:3},{value:"Accessing iOS-Specific Product Information",id:"accessing-ios-specific-product-information",level:4},{value:"Accessing Enhanced Purchase Information",id:"accessing-enhanced-purchase-information",level:4},{value:"Enhanced Server-Side Validation",id:"enhanced-server-side-validation",level:2},{value:"Technical Improvements",id:"technical-improvements",level:2},{value:"Under the Hood",id:"under-the-hood",level:3},{value:"Developer Experience",id:"developer-experience",level:3},{value:"Testing Improvements",id:"testing-improvements",level:2},{value:"Better Test Organization",id:"better-test-organization",level:3},{value:"Enhanced Test Coverage",id:"enhanced-test-coverage",level:3},{value:"Why Upgrade?",id:"why-upgrade",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Resources",id:"resources",level:2},{value:"Community",id:"community",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"We're excited to announce the release of flutter_inapp_purchase 6.3.0! This version brings significant improvements to OpenIAP specification compliance, enhanced type safety, critical bug fixes, and a completely reorganized test suite\u2014all while maintaining full backward compatibility."}),"\n",(0,s.jsx)(n.h2,{id:"whats-new-in-630",children:"What's New in 6.3.0"}),"\n",(0,s.jsx)(n.h3,{id:"critical-bug-fixes",children:"Critical Bug Fixes"}),"\n",(0,s.jsx)(n.h4,{id:"android-purchase-state-mapping-fix-524",children:"Android Purchase State Mapping Fix (#524)"}),"\n",(0,s.jsx)(n.p,{children:"Fixed a critical bug where Android purchase states were incorrectly mapped, potentially causing transactions to be misinterpreted:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before (Incorrect):"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0 \u2192 PURCHASED \u274c"}),"\n",(0,s.jsx)(n.li,{children:"1 \u2192 PENDING \u274c"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After (Correct):"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0 \u2192 UNSPECIFIED_STATE \u2705"}),"\n",(0,s.jsx)(n.li,{children:"1 \u2192 PURCHASED \u2705"}),"\n",(0,s.jsx)(n.li,{children:"2 \u2192 PENDING \u2705"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This fix aligns with the official Google Play Billing documentation and prevents misinterpreting UNSPECIFIED_STATE as a completed purchase."}),"\n",(0,s.jsx)(n.h3,{id:"deprecated-methods",children:"Deprecated Methods"}),"\n",(0,s.jsxs)(n.p,{children:["The following methods are now deprecated in favor of the unified ",(0,s.jsx)(n.code,{children:"requestProducts"})," API:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// \u274c Deprecated methods (still work but will be removed in next major version)\nawait iap.getProducts(productIds);\nawait iap.getSubscriptions(productIds);\n\n// \u2705 Use requestProducts instead\nawait iap.requestProducts(\n  RequestProductsParams(\n    productIds: productIds,\n    type: PurchaseType.inapp, // or PurchaseType.subs\n  ),\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"enhanced-openiap-field-support",children:"Enhanced OpenIAP Field Support"}),"\n",(0,s.jsxs)(n.p,{children:["One of the biggest improvements in 6.3.0 is comprehensive field mapping following the ",(0,s.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP specification"}),". We've added extensive support for platform-specific fields that were previously unavailable."]}),"\n",(0,s.jsx)(n.h4,{id:"ios-storekit-2-integration",children:"iOS StoreKit 2 Integration"}),"\n",(0,s.jsx)(n.p,{children:"Products and subscriptions now include comprehensive iOS fields:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"final products = await FlutterInappPurchase.instance.requestProducts(\n  RequestProductsParams(productIds: ['premium_monthly']),\n);\n\nfinal product = products.first;\nprint('Display Name: ${product.displayName}');\nprint('Family Shareable: ${product.isFamilyShareable}');\nprint('JSON Representation: ${product.jsonRepresentation}');\n\n// Access subscription-specific info\nif (product.subscription != null) {\n  print('Subscription Group: ${product.subscription!.subscriptionGroupId}');\n  print('Promotional Offers: ${product.promotionalOfferIdsIOS}');\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Purchase objects now include StoreKit 2 verification and metadata:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"FlutterInappPurchase.instance.purchaseUpdatedListener.listen((purchase) {\n  // Enhanced verification data\n  print('Verification Result: ${purchase.verificationResultIOS}');\n  print('Environment: ${purchase.environmentIOS}'); // \"Sandbox\" | \"Production\"\n  print('Expiration Date: ${purchase.expirationDateIOS}');\n\n  // JWS token for server validation\n  if (purchase.purchaseToken != null) {\n    // Send to your server for App Store validation\n    validateWithAppStore(purchase.purchaseToken!);\n  }\n});\n"})}),"\n",(0,s.jsx)(n.h4,{id:"android-google-play-enhanced-fields",children:"Android Google Play Enhanced Fields"}),"\n",(0,s.jsx)(n.p,{children:"Android purchases now include comprehensive Google Play Billing fields:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// Enhanced Android purchase validation\nif (purchase.platform == IapPlatform.android) {\n  print('Order ID: ${purchase.orderIdAndroid}');\n  print('Package Name: ${purchase.packageNameAndroid}');\n  print('Signature: ${purchase.signatureAndroid}');\n  print('Acknowledged: ${purchase.acknowledgedAndroid}');\n\n  // Use for server-side validation\n  final validationData = {\n    'purchaseToken': purchase.purchaseToken,\n    'signature': purchase.signatureAndroid,\n    'packageName': purchase.packageNameAndroid,\n  };\n  await validateWithGooglePlay(validationData);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"improved-type-safety--reliability",children:"Improved Type Safety & Reliability"}),"\n",(0,s.jsx)(n.p,{children:"We've significantly improved the plugin's type safety and error handling:"}),"\n",(0,s.jsx)(n.h4,{id:"better-json-parsing",children:"Better JSON Parsing"}),"\n",(0,s.jsx)(n.p,{children:"Fixed critical type casting issues that could cause runtime errors:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// Before: Could throw casting exceptions\n// Map<Object?, Object?> causing runtime errors\n\n// After: Safe conversion with proper error handling\nMap<String, dynamic>.from(item as Map)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"enhanced-subscription-detection",children:"Enhanced Subscription Detection"}),"\n",(0,s.jsx)(n.p,{children:"Improved subscription detection logic across platforms with correct state mapping."}),"\n",(0,s.jsx)(n.h3,{id:"test-suite-overhaul",children:"Test Suite Overhaul"}),"\n",(0,s.jsx)(n.p,{children:"We've completely reorganized our test suite for better maintainability and coverage:"}),"\n",(0,s.jsx)(n.h4,{id:"organized-by-business-flows",children:"Organized by Business Flows"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purchase Flow Tests"})," (",(0,s.jsx)(n.code,{children:"test/purchase_flow_test.dart"}),"): General purchase operations, error handling, and platform-specific behaviors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Subscription Flow Tests"})," (",(0,s.jsx)(n.code,{children:"test/subscription_flow_test.dart"}),"): Subscription management, active subscription detection, and lifecycle operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Available Purchases Tests"})," (",(0,s.jsx)(n.code,{children:"test/available_purchases_test.dart"}),"): Purchase history, restoration, and transaction management"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"improved-coverage",children:"Improved Coverage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Test coverage improved from 26% to 28.2%"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"All 95 tests now pass consistently"})}),"\n",(0,s.jsx)(n.li,{children:"Better mock data consistency and more reliable assertions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,s.jsx)(n.h3,{id:"migration-is-seamless",children:"Migration is Seamless"}),"\n",(0,s.jsxs)(n.p,{children:["The best part? ",(0,s.jsx)(n.strong,{children:"No breaking changes!"})," Version 6.3.0 is fully backward compatible:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// Your existing code continues to work unchanged\nfinal iap = FlutterInappPurchase.instance;\nawait iap.initConnection();\n\n// Use the new unified API (recommended)\nfinal products = await iap.requestProducts(\n  RequestProductsParams(\n    productIds: ['your_product_id'],\n    type: PurchaseType.inapp, // or PurchaseType.subs\n  ),\n);\n\nawait iap.requestPurchase(\n  request: RequestPurchase(\n    ios: RequestPurchaseIOS(sku: 'your_product_id'),\n    android: RequestPurchaseAndroid(skus: ['your_product_id']),\n  ),\n  type: PurchaseType.inapp,\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Simply update your ",(0,s.jsx)(n.code,{children:"pubspec.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flutter_inapp_purchase: ^6.3.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"optional---use-new-fields",children:"Optional - Use New Fields"}),"\n",(0,s.jsx)(n.p,{children:"You can now access additional platform-specific fields:"}),"\n",(0,s.jsx)(n.h4,{id:"accessing-ios-specific-product-information",children:"Accessing iOS-Specific Product Information"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// Before (still works)\nfinal products = await FlutterInappPurchase.instance.requestProducts(\n  RequestProductsParams(productIds: ['premium_monthly']),\n);\nprint('Price: ${products.first.price}');\n\n// After (enhanced with new fields)\nfinal product = products.first;\nprint('Price: ${product.price}');\nprint('Display Name: ${product.displayName}'); // New\nprint('Family Shareable: ${product.isFamilyShareable}'); // New\n\n// Access subscription info\nif (product.subscription != null) {\n  print('Subscription Group: ${product.subscription!.subscriptionGroupId}');\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"accessing-enhanced-purchase-information",children:"Accessing Enhanced Purchase Information"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// Purchase handling with new fields\nFlutterInappPurchase.instance.purchaseUpdatedListener.listen((purchase) {\n  print('Product ID: ${purchase.productId}');\n  print('Transaction ID: ${purchase.transactionId}');\n\n  // New iOS fields\n  if (purchase.verificationResultIOS != null) {\n    print('Verification: ${purchase.verificationResultIOS}');\n  }\n  if (purchase.environmentIOS != null) {\n    print('Environment: ${purchase.environmentIOS}'); // \"Sandbox\" | \"Production\"\n  }\n\n  // New Android fields\n  if (purchase.signatureAndroid != null) {\n    print('Signature: ${purchase.signatureAndroid}');\n  }\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"enhanced-server-side-validation",children:"Enhanced Server-Side Validation"}),"\n",(0,s.jsx)(n.p,{children:"The new fields enable more robust server-side validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"Future<bool> validatePurchase(Purchase purchase) async {\n  final validationData = {\n    'transactionId': purchase.transactionId,\n    'productId': purchase.productId,\n    'purchaseToken': purchase.purchaseToken,\n  };\n\n  if (purchase.platform == IapPlatform.ios) {\n    // Use StoreKit 2 JWS token\n    validationData['jwsRepresentation'] = purchase.purchaseToken;\n    validationData['environment'] = purchase.environmentIOS;\n\n    return await validateWithAppStore(validationData);\n  } else {\n    // Use Google Play signature validation\n    validationData['signature'] = purchase.signatureAndroid;\n    validationData['packageName'] = purchase.packageNameAndroid;\n\n    return await validateWithGooglePlay(validationData);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"technical-improvements",children:"Technical Improvements"}),"\n",(0,s.jsx)(n.h3,{id:"under-the-hood",children:"Under the Hood"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced JSON serialization/deserialization"})," with better error handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Improved mock data consistency"})," across all test files"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better error messages"})," and debugging information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Standardized field naming"})," following OpenIAP conventions"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Fixed critical Android purchase state mapping"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprehensive test coverage"})," for all business flows"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better documentation"})," with practical examples"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type-safe APIs"})," with improved null safety"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent behavior"})," across iOS and Android platforms"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unified API"})," with deprecated methods properly marked"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-improvements",children:"Testing Improvements"}),"\n",(0,s.jsx)(n.h3,{id:"better-test-organization",children:"Better Test Organization"}),"\n",(0,s.jsx)(n.p,{children:"If you were running tests before, you'll notice improved organization:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Tests are now organized by flow\nflutter test test/purchase_flow_test.dart      # General purchases\nflutter test test/subscription_flow_test.dart  # Subscriptions\nflutter test test/available_purchases_test.dart # Purchase history\n"})}),"\n",(0,s.jsx)(n.h3,{id:"enhanced-test-coverage",children:"Enhanced Test Coverage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Test coverage improved from 26% to 28.2%"}),"\n",(0,s.jsx)(n.li,{children:"All 95 tests now pass consistently"}),"\n",(0,s.jsx)(n.li,{children:"Better mock data and more reliable assertions"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"why-upgrade",children:"Why Upgrade?"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Critical Bug Fix"}),": Android purchase state mapping now correctly interprets transaction states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Enhanced OpenIAP Compliance"}),": Access to comprehensive platform-specific fields"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better Reliability"}),": Improved type safety and error handling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Future-Proof"}),": Foundation for upcoming OpenIAP features"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better Testing"}),": More comprehensive and reliable test suite"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Breaking Changes"}),": Seamless upgrade experience"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.p,{children:"Since 6.3.0 is fully backward compatible, you shouldn't encounter any breaking changes. If you do experience issues:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Clean and rebuild"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"flutter clean\nflutter pub get\nflutter run\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Check for proper imports"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_inapp_purchase/flutter_inapp_purchase.dart';\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Verify platform support"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"iOS: Requires iOS 11.0+ (StoreKit 2 features need iOS 15.0+)"}),"\n",(0,s.jsx)(n.li,{children:"Android: Requires API level 19+ with Google Play Billing Library"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Update deprecated method calls"}),":\nReplace ",(0,s.jsx)(n.code,{children:"getProducts()"})," and ",(0,s.jsx)(n.code,{children:"getSubscriptions()"})," with ",(0,s.jsx)(n.code,{children:"requestProducts()"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://pub.dev/documentation/flutter_inapp_purchase/latest/",children:"API Documentation"})}),": Complete API reference"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Specification"})}),": Official specification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/issues",children:"GitHub Issues"})}),": Report bugs or request features"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://flutter-inapp-purchase.hyo.dev",children:"Documentation Site"})}),": Comprehensive guides and examples"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"community",children:"Community"}),"\n",(0,s.jsxs)(n.p,{children:["This release wouldn't be possible without our amazing community. Special thanks to all contributors, testers, and users who provided feedback and helped improve the plugin. Special recognition to ",(0,s.jsx)(n.a,{href:"https://github.com/quancr258",children:"@quancr258"})," for reporting the critical Android purchase state mapping issue (",(0,s.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/issues/524",children:"#524"}),")."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,s.jsx)(n.p,{children:"We're continuing to work on expanding OpenIAP compliance and improving the developer experience. Stay tuned for future releases!"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Happy coding with flutter_inapp_purchase 6.3.0!"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["+",(0,s.jsx)(n.em,{children:"Published on August 19, 2025 by the flutter_inapp_purchase team"})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);