"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[7306],{8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var s=r(6540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},9752:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api/classes/flutter-inapp-purchase","title":"FlutterInappPurchase","description":"The main class for handling in-app purchases in Flutter applications. This class provides a comprehensive API for managing purchases on both iOS and Android platforms.","source":"@site/docs/api/classes/flutter-inapp-purchase.md","sourceDirName":"api/classes","slug":"/api/classes/flutter-inapp-purchase","permalink":"/docs/api/classes/flutter-inapp-purchase","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/api/classes/flutter-inapp-purchase.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"FlutterInappPurchase"}}');var i=r(4848),t=r(8453);const a={sidebar_position:1,title:"FlutterInappPurchase"},c="FlutterInappPurchase Class",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Properties",id:"properties",level:2},{value:"Static Properties",id:"static-properties",level:3},{value:"Streams",id:"streams",level:3},{value:"Instance Streams (expo-iap compatible)",id:"instance-streams-expo-iap-compatible",level:3},{value:"Methods",id:"methods",level:2},{value:"Connection Management",id:"connection-management",level:3},{value:"initConnection()",id:"initconnection",level:4},{value:"endConnection()",id:"endconnection",level:4},{value:"Product Management",id:"product-management",level:3},{value:"requestProducts()",id:"requestproducts",level:4},{value:"requestProducts()",id:"requestproducts-1",level:4},{value:"getProducts() [Deprecated]",id:"getproducts-deprecated",level:4},{value:"getSubscriptions() [Deprecated]",id:"getsubscriptions-deprecated",level:4},{value:"Purchase Management",id:"purchase-management",level:3},{value:"requestPurchase()",id:"requestpurchase",level:4},{value:"finishTransaction()",id:"finishtransaction",level:4},{value:"Purchase History",id:"purchase-history",level:3},{value:"getAvailablePurchases()",id:"getavailablepurchases",level:4},{value:"getPurchaseHistories()",id:"getpurchasehistories",level:4},{value:"Platform-Specific Methods",id:"platform-specific-methods",level:3},{value:"iOS Only",id:"ios-only",level:4},{value:"presentCodeRedemptionSheetIOS()",id:"presentcoderedemptionsheetios",level:5},{value:"showManageSubscriptionsIOS()",id:"showmanagesubscriptionsios",level:5},{value:"getStorefrontIOS()",id:"getstorefrontios",level:5},{value:"Android Only",id:"android-only",level:4},{value:"deepLinkToSubscriptionsAndroid()",id:"deeplinktosubscriptionsandroid",level:5},{value:"acknowledgePurchaseAndroid()",id:"acknowledgepurchaseandroid",level:5},{value:"Receipt Validation",id:"receipt-validation",level:3},{value:"validateReceiptIos()",id:"validatereceiptios",level:4},{value:"validateReceiptAndroid()",id:"validatereceiptandroid",level:4},{value:"Usage Example",id:"usage-example",level:2},{value:"Migration Notes",id:"migration-notes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"flutterinapppurchase-class",children:"FlutterInappPurchase Class"})}),"\n",(0,i.jsx)(n.p,{children:"The main class for handling in-app purchases in Flutter applications. This class provides a comprehensive API for managing purchases on both iOS and Android platforms."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"FlutterInappPurchase"})," is a singleton class that manages the connection to platform-specific purchase services (App Store for iOS, Google Play for Android). It handles product queries, purchase flows, and transaction management."]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"static-properties",children:"Static Properties"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"static FlutterInappPurchase instance\n"})}),"\n",(0,i.jsx)(n.p,{children:"The singleton instance of the FlutterInappPurchase class."}),"\n",(0,i.jsx)(n.h3,{id:"streams",children:"Streams"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<PurchasedItem?> purchaseUpdated\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream that emits purchase updates when a transaction state changes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<PurchaseResult?> purchaseError\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream that emits purchase errors when a transaction fails."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<ConnectionResult> connectionUpdated\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream that emits connection state updates."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<String?> purchasePromoted\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream that emits promoted product IDs (iOS only)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<int?> inAppMessageAndroid\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream that emits in-app message codes (Android only)."}),"\n",(0,i.jsx)(n.h3,{id:"instance-streams-expo-iap-compatible",children:"Instance Streams (expo-iap compatible)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<Purchase> purchaseUpdatedListener\n"})}),"\n",(0,i.jsx)(n.p,{children:"Purchase updated event stream compatible with expo-iap."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<PurchaseError> purchaseErrorListener\n"})}),"\n",(0,i.jsx)(n.p,{children:"Purchase error event stream compatible with expo-iap."}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"connection-management",children:"Connection Management"}),"\n",(0,i.jsx)(n.h4,{id:"initconnection",children:"initConnection()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> initConnection()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the connection to the platform's billing service. Must be called before any other purchase-related operations."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Throws:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PurchaseError"})," with ",(0,i.jsx)(n.code,{children:"E_ALREADY_INITIALIZED"})," if already initialized"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PurchaseError"})," with ",(0,i.jsx)(n.code,{children:"E_NOT_INITIALIZED"})," if initialization fails"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"endconnection",children:"endConnection()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> endConnection()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Ends the connection to the platform's billing service. Should be called when the app no longer needs IAP functionality."}),"\n",(0,i.jsx)(n.h3,{id:"product-management",children:"Product Management"}),"\n",(0,i.jsx)(n.h4,{id:"requestproducts",children:"requestProducts()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<ProductCommon>> requestProducts({\n  required List<String> productIds,\n  PurchaseType type = PurchaseType.inapp,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fetches product information from the store."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"productIds"}),": List of product identifiers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Product type (optional, defaults to ",(0,i.jsx)(n.code,{children:"PurchaseType.inapp"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["List of products (either ",(0,i.jsx)(n.code,{children:"Product"})," or ",(0,i.jsx)(n.code,{children:"Subscription"})," instances)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"final products = await FlutterInappPurchase.instance.requestProducts(\n  productIds: ['com.example.premium', 'com.example.pro'],\n  type: PurchaseType.inapp,\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"requestproducts-1",children:"requestProducts()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<IapItem>> requestProducts({\n  required List<String> skus,\n  PurchaseType type = PurchaseType.inapp,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Unified method to retrieve products or subscriptions."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type: 'inapp'"})," - for regular products (consumables and non-consumables)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type: 'subs'"})," - for subscription products"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"getproducts-deprecated",children:"getProducts() [Deprecated]"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<IapItem>> getProducts(List<String> productIds)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Legacy method to retrieve non-subscription products. Use ",(0,i.jsx)(n.code,{children:"requestProducts()"})," instead."]}),"\n",(0,i.jsx)(n.h4,{id:"getsubscriptions-deprecated",children:"getSubscriptions() [Deprecated]"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<IapItem>> getSubscriptions(List<String> productIds)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Legacy method to retrieve subscription products. Use ",(0,i.jsx)(n.code,{children:"requestProducts()"})," instead."]}),"\n",(0,i.jsx)(n.h3,{id:"purchase-management",children:"Purchase Management"}),"\n",(0,i.jsx)(n.h4,{id:"requestpurchase",children:"requestPurchase()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> requestPurchase({\n  required RequestPurchase request,\n  required PurchaseType type,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initiates a purchase flow for the specified product."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"request"}),": Platform-specific purchase request parameters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Type of purchase (inapp or subscription)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"await FlutterInappPurchase.instance.requestPurchase(\n  request: RequestPurchase(\n    ios: RequestPurchaseIOS(\n      sku: 'com.example.premium',\n      appAccountToken: 'user123',\n    ),\n  ),\n  type: PurchaseType.inapp,\n);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"finishtransaction",children:"finishTransaction()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<String?> finishTransaction(Purchase purchase, {bool isConsumable = false})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Completes a transaction and removes it from the queue."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchase"}),": The purchase to finish"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isConsumable"}),": Whether the product is consumable (Android only)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"purchase-history",children:"Purchase History"}),"\n",(0,i.jsx)(n.h4,{id:"getavailablepurchases",children:"getAvailablePurchases()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<Purchase>> getAvailablePurchases()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all non-consumed purchases."}),"\n",(0,i.jsx)(n.h4,{id:"getpurchasehistories",children:"getPurchaseHistories()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<Purchase>> getPurchaseHistories()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the user's purchase history."}),"\n",(0,i.jsx)(n.h3,{id:"platform-specific-methods",children:"Platform-Specific Methods"}),"\n",(0,i.jsx)(n.h4,{id:"ios-only",children:"iOS Only"}),"\n",(0,i.jsx)(n.h5,{id:"presentcoderedemptionsheetios",children:"presentCodeRedemptionSheetIOS()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> presentCodeRedemptionSheetIOS()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Shows the App Store's code redemption sheet (iOS 16+)."}),"\n",(0,i.jsx)(n.h5,{id:"showmanagesubscriptionsios",children:"showManageSubscriptionsIOS()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> showManageSubscriptionsIOS()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Opens the subscription management screen (iOS 15+)."}),"\n",(0,i.jsx)(n.h5,{id:"getstorefrontios",children:"getStorefrontIOS()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<AppStoreInfo?> getStorefrontIOS()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves the current App Store storefront information."}),"\n",(0,i.jsx)(n.h4,{id:"android-only",children:"Android Only"}),"\n",(0,i.jsx)(n.h5,{id:"deeplinktosubscriptionsandroid",children:"deepLinkToSubscriptionsAndroid()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> deepLinkToSubscriptionsAndroid({\n  required String sku,\n  required String packageName,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Opens the Google Play subscription management screen for a specific product."}),"\n",(0,i.jsx)(n.h5,{id:"acknowledgepurchaseandroid",children:"acknowledgePurchaseAndroid()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> acknowledgePurchaseAndroid({required String purchaseToken})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Acknowledges a purchase on Android (required within 3 days)."}),"\n",(0,i.jsx)(n.h3,{id:"receipt-validation",children:"Receipt Validation"}),"\n",(0,i.jsx)(n.h4,{id:"validatereceiptios",children:"validateReceiptIos()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<http.Response> validateReceiptIos({\n  required Map<String, String> receiptBody,\n  bool isTest = true,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Validates a receipt with Apple's verification service."}),"\n",(0,i.jsx)(n.h4,{id:"validatereceiptandroid",children:"validateReceiptAndroid()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<http.Response> validateReceiptAndroid({\n  required String packageName,\n  required String productId,\n  required String productToken,\n  required String accessToken,\n  bool isSubscription = false,\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Validates a receipt with Google's verification API."}),"\n",(0,i.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_inapp_purchase/flutter_inapp_purchase.dart';\n\nclass StoreService {\n  final _iap = FlutterInappPurchase.instance;\n\n  Future<void> initialize() async {\n    // Initialize connection\n    await _iap.initConnection();\n\n    // Listen to purchase updates\n    _iap.purchaseUpdatedListener.listen((purchase) {\n      _handlePurchase(purchase);\n    });\n\n    // Listen to purchase errors\n    _iap.purchaseErrorListener.listen((error) {\n      _handleError(error);\n    });\n  }\n\n  Future<void> buyProduct(String productId) async {\n    await _iap.requestPurchase(\n      request: RequestPurchase(\n        ios: RequestPurchaseIOS(sku: productId),\n        android: RequestPurchaseAndroid(skus: [productId]),\n      ),\n      type: PurchaseType.inapp,\n    );\n  }\n\n  void _handlePurchase(PurchasedItem purchase) {\n    // Process the purchase\n    print('Purchase completed: ${purchase.productId}');\n  }\n\n  void _handleError(PurchaseResult error) {\n    // Handle the error\n    print('Purchase failed: ${error.message}');\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,i.jsx)(n.p,{children:"This class maintains backward compatibility with the original API while also providing expo-iap compatible methods. When migrating from expo-iap, you can use the new methods that match the expo-iap interface:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"initConnection()"})," instead of ",(0,i.jsx)(n.code,{children:"initialize()"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"requestProducts()"})," with type parameter instead of separate ",(0,i.jsx)(n.code,{children:"getProducts()"}),"/",(0,i.jsx)(n.code,{children:"getSubscriptions()"})," methods"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchaseUpdatedListener"})," instead of ",(0,i.jsx)(n.code,{children:"purchaseUpdated"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchaseErrorListener"})," instead of ",(0,i.jsx)(n.code,{children:"purchaseError"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);