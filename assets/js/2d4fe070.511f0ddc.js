"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[841],{5570:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/overview","title":"API Overview","description":"Flutter In-App Purchase provides a comprehensive API for managing in-app purchases across iOS and Android platforms.","source":"@site/versioned_docs/version-6.3/api/overview.md","sourceDirName":"api","slug":"/api/overview","permalink":"/docs/6.3/api/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/versioned_docs/version-6.3/api/overview.md","tags":[],"version":"6.3","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var i=r(4848),a=r(8453);const t={sidebar_position:1},c="API Overview",d={},l=[{value:"Core Classes",id:"core-classes",level:2},{value:"FlutterInappPurchase",id:"flutterinapppurchase",level:3},{value:"IapItem",id:"iapitem",level:3},{value:"PurchasedItem",id:"purchaseditem",level:3},{value:"Key Methods",id:"key-methods",level:2},{value:"Connection Management",id:"connection-management",level:3},{value:"initialize()",id:"initialize",level:4},{value:"Product Management",id:"product-management",level:3},{value:"requestProducts()",id:"requestproducts",level:4},{value:"Purchase Management",id:"purchase-management",level:3},{value:"requestPurchase()",id:"requestpurchase",level:4},{value:"getAvailablePurchases()",id:"getavailablepurchases",level:4},{value:"Transaction Management",id:"transaction-management",level:3},{value:"finishTransaction()",id:"finishtransaction",level:4},{value:"consumePurchaseAndroid()",id:"consumepurchaseandroid",level:4},{value:"acknowledgePurchaseAndroid()",id:"acknowledgepurchaseandroid",level:4},{value:"Streams",id:"streams",level:2},{value:"purchaseUpdatedListener",id:"purchaseupdatedlistener",level:3},{value:"purchaseErrorListener",id:"purchaseerrorlistener",level:3},{value:"Platform-Specific Features",id:"platform-specific-features",level:2},{value:"iOS Specific",id:"ios-specific",level:3},{value:"Android Specific",id:"android-specific",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Basic Purchase Flow",id:"basic-purchase-flow",level:3},{value:"Subscription Flow",id:"subscription-flow",level:3},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-overview",children:"API Overview"})}),"\n",(0,i.jsx)(n.p,{children:"Flutter In-App Purchase provides a comprehensive API for managing in-app purchases across iOS and Android platforms."}),"\n",(0,i.jsx)(n.h2,{id:"core-classes",children:"Core Classes"}),"\n",(0,i.jsx)(n.h3,{id:"flutterinapppurchase",children:"FlutterInappPurchase"}),"\n",(0,i.jsx)(n.p,{children:"The main class providing all IAP functionality:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class FlutterInappPurchase {\n  static FlutterInappPurchase get instance => _instance;\n\n  // Connection management\n  Future<String?> initialize();\n  Future<String?> endConnection();\n\n  // Product management\n  Future<List<IapItem>> requestProducts({\n    required List<String> skus,\n    PurchaseType type = PurchaseType.inapp,\n  });\n\n  // Purchase management\n  Future<void> requestPurchase(String sku);\n  Future<void> requestSubscription(String sku);\n  Future<List<PurchasedItem>?> getAvailablePurchases();\n\n  // Transaction management\n  Future<String?> finishTransaction(Purchase purchase, {bool isConsumable = false});\n  // Android helpers\n  Future<String?> acknowledgePurchaseAndroid({required String purchaseToken});\n  Future<String?> consumePurchaseAndroid({required String purchaseToken});\n\n  // Streams (expo-iap compatible)\n  Stream<Purchase> get purchaseUpdatedListener;\n  Stream<PurchaseError> get purchaseErrorListener;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"iapitem",children:"IapItem"}),"\n",(0,i.jsx)(n.p,{children:"Represents a product or subscription:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class IapItem {\n  final String? productId;\n  final String? price;\n  final String? currency;\n  final String? localizedPrice;\n  final String? title;\n  final String? description;\n\n  // iOS specific fields\n  final String? introductoryPrice;\n  final String? introductoryPricePaymentModeIOS;\n  final String? introductoryPriceNumberOfPeriodsIOS;\n  final String? introductoryPriceSubscriptionPeriodIOS;\n  final String? subscriptionPeriodNumberIOS;\n  final String? subscriptionPeriodUnitIOS;\n\n  // Android specific fields\n  final String? signatureAndroid;\n  final String? originalJsonAndroid;\n  final String? developerPayloadAndroid;\n  final String? isConsumableAndroid;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"purchaseditem",children:"PurchasedItem"}),"\n",(0,i.jsx)(n.p,{children:"Represents a completed purchase:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class PurchasedItem {\n  final String? productId;\n  final String? transactionId;\n  final DateTime? transactionDate;\n  final String? transactionReceipt;\n  final String? purchaseToken;\n\n  // iOS specific\n  final String? originalTransactionDateIOS;\n  final String? originalTransactionIdentifierIOS;\n\n  // Android specific\n  final String? purchaseTokenAndroid;  // [DEPRECATED] Use purchaseToken instead\n  final String? developerPayloadAndroid;\n  final bool? isAcknowledgedAndroid;\n  final int? purchaseStateAndroid;\n  final String? packageNameAndroid;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"key-methods",children:"Key Methods"}),"\n",(0,i.jsx)(n.h3,{id:"connection-management",children:"Connection Management"}),"\n",(0,i.jsx)(n.h4,{id:"initialize",children:"initialize()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<String?> initialize() async\n"})}),"\n",(0,i.jsx)(n.p,{children:"Establishes connection to the store. Must be called before any other methods."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Connection result message or error"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"String? result = await FlutterInappPurchase.instance.initialize();\nif (result == 'Billing is unavailable') {\n  // Handle unavailable billing\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"product-management",children:"Product Management"}),"\n",(0,i.jsx)(n.h4,{id:"requestproducts",children:"requestProducts()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<IapItem>> requestProducts({\n  required List<String> skus,\n  PurchaseType type = PurchaseType.inapp,\n}) async\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fetches product or subscription information for the given SKUs."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"productIds"}),": List of product identifiers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Product type - ",(0,i.jsx)(n.code,{children:"PurchaseType.inapp"})," (regular) or ",(0,i.jsx)(n.code,{children:"PurchaseType.subs"})," (subscriptions)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of available products or subscriptions"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// Get regular products (consumables and non-consumables)\nList<IapItem> products = await FlutterInappPurchase.instance\n    .requestProducts(skus: ['coin_pack_100', 'remove_ads'], type: PurchaseType.inapp);\n\n// Get subscriptions\nList<IapItem> subscriptions = await FlutterInappPurchase.instance\n    .requestProducts(skus: ['premium_monthly', 'premium_yearly'], type: PurchaseType.subs);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"purchase-management",children:"Purchase Management"}),"\n",(0,i.jsx)(n.h4,{id:"requestpurchase",children:"requestPurchase()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<void> requestPurchase(String sku) async\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initiates a purchase for the specified product."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sku"}),": Product identifier to purchase"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Throws"}),": ",(0,i.jsx)(n.code,{children:"PlatformException"})," if purchase fails"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"try {\n  await FlutterInappPurchase.instance.requestPurchase('remove_ads');\n  // Purchase result delivered via purchaseUpdated stream\n} catch (e) {\n  // Handle purchase error\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"getavailablepurchases",children:"getAvailablePurchases()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<List<PurchasedItem>?> getAvailablePurchases() async\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieves all available purchases (including pending and non-consumed)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": List of purchases or null"]}),"\n",(0,i.jsx)(n.h3,{id:"transaction-management",children:"Transaction Management"}),"\n",(0,i.jsx)(n.h4,{id:"finishtransaction",children:"finishTransaction()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<String?> finishTransaction(Purchase purchase, {bool isConsumable = false}) async\n"})}),"\n",(0,i.jsx)(n.p,{children:"Completes a transaction and removes it from the queue."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchase"}),": The purchase to finish"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result message or null"]}),"\n",(0,i.jsx)(n.h4,{id:"consumepurchaseandroid",children:"consumePurchaseAndroid()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<String?> consumePurchaseAndroid({required String purchaseToken}) async\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Android only"}),": Consumes a purchase, allowing it to be purchased again."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchaseToken"}),": The purchase token from the purchase"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result message or null"]}),"\n",(0,i.jsx)(n.h4,{id:"acknowledgepurchaseandroid",children:"acknowledgePurchaseAndroid()"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Future<String?> acknowledgePurchaseAndroid({required String purchaseToken}) async\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Android only"}),": Acknowledges a non-consumable purchase."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"purchaseToken"}),": The purchase token from the purchase"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result message or null"]}),"\n",(0,i.jsx)(n.h2,{id:"streams",children:"Streams"}),"\n",(0,i.jsx)(n.h3,{id:"purchaseupdatedlistener",children:"purchaseUpdatedListener"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<Purchase> get purchaseUpdatedListener\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream of successful purchase updates (expo-iap compatible)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"FlutterInappPurchase.instance.purchaseUpdatedListener.listen((purchase) {\n  // Handle successful purchase\n  print('Purchased: ${purchase.productId}');\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"purchaseerrorlistener",children:"purchaseErrorListener"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"Stream<PurchaseError> get purchaseErrorListener\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stream of purchase errors (expo-iap compatible)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"FlutterInappPurchase.instance.purchaseErrorListener.listen((error) {\n  // Handle purchase error\n  print('Purchase failed: ${error.message}');\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"platform-specific-features",children:"Platform-Specific Features"}),"\n",(0,i.jsx)(n.h3,{id:"ios-specific",children:"iOS Specific"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// Get App Store receipt\nFuture<String?> getReceiptData() async\n\n// Validate receipt locally\nFuture<Map<String, dynamic>?> validateReceiptIos({\n  required String receiptBody,\n  bool isTest = true,\n}) async\n\n// Get promoted product\nFuture<String?> getPromotedProduct() async\n\n// Request product info\nFuture<List<IapItem>> getProductsIOS(List<String> skus) async\n"})}),"\n",(0,i.jsx)(n.h3,{id:"android-specific",children:"Android Specific"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// Get purchase history\nFuture<List<PurchasedItem>?> getPurchaseHistoryAndroid() async\n\n// Enable debug mode\nvoid setDebugMode(bool enabled)\n\n// Check if item is consumed\nbool isConsumableAndroid(String productId)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"Common error codes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"class IAPError {\n  static const String E_UNKNOWN = 'E_UNKNOWN';\n  static const String E_USER_CANCELLED = 'E_USER_CANCELLED';\n  static const String E_NETWORK = 'E_NETWORK';\n  static const String E_ITEM_UNAVAILABLE = 'E_ITEM_UNAVAILABLE';\n  static const String E_REMOTE_ERROR = 'E_REMOTE_ERROR';\n  static const String E_NOT_PREPARED = 'E_NOT_PREPARED';\n  static const String E_ALREADY_OWNED = 'E_ALREADY_OWNED';\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"basic-purchase-flow",children:"Basic Purchase Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// 1. Initialize\nawait FlutterInappPurchase.instance.initialize();\n\n// 2. Set up listeners\nFlutterInappPurchase.instance.purchaseUpdatedListener.listen(handlePurchase);\n\n// 3. Load products\nvar products = await FlutterInappPurchase.instance.requestProducts(\n  skus: productIds,\n  type: PurchaseType.inapp\n);\n\n// 4. Request purchase\nawait FlutterInappPurchase.instance.requestPurchase(productId);\n\n// 5. Handle in listener\nvoid handlePurchase(Purchase purchase) {\n  // Verify, deliver, and finish\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"subscription-flow",children:"Subscription Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dart",children:"// 1. Load subscriptions\nvar subs = await FlutterInappPurchase.instance.requestProducts(\n  productIds: subIds,\n  type: PurchaseType.subs\n);\n\n// 2. Request subscription\nawait FlutterInappPurchase.instance.requestSubscription(subId);\n\n// 3. Check active subscriptions\nvar purchases = await FlutterInappPurchase.instance.getAvailablePurchases();\nvar activeSubs = purchases?.where((p) => isSubscriptionActive(p));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./methods/init-connection",children:"Method Reference"})," - Detailed method documentation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./types/product-type",children:"Type Reference"})," - Type definitions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./types/error-codes",children:"Error Codes"})," - Complete error code reference"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(6540);const i={},a=s.createContext(i);function t(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);