"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[6198],{2838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"migration/from-expo-iap","title":"Migration from expo-iap","description":"This guide helps you migrate from expo-iap to flutterinapppurchase, highlighting key differences and providing migration strategies.","source":"@site/docs/migration/from-expo-iap.md","sourceDirName":"migration","slug":"/migration/from-expo-iap","permalink":"/docs/migration/from-expo-iap","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/migration/from-expo-iap.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Migration from expo-iap"}}');var r=t(4848),s=t(8453);const a={sidebar_position:2,title:"Migration from expo-iap"},c="Migration from expo-iap",l={},o=[{value:"Key Differences",id:"key-differences",level:2},{value:"Architecture",id:"architecture",level:3},{value:"API Comparison",id:"api-comparison",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Product Fetching",id:"product-fetching",level:3},{value:"Purchase Flow",id:"purchase-flow",level:3},{value:"Data Model Mapping",id:"data-model-mapping",level:2},{value:"Product Information",id:"product-information",level:3},{value:"Purchase Information",id:"purchase-information",level:3},{value:"Migration Strategy",id:"migration-strategy",level:2},{value:"Phase 1: Setup Flutter Environment",id:"phase-1-setup-flutter-environment",level:3},{value:"Phase 2: Port Core Logic",id:"phase-2-port-core-logic",level:3},{value:"Phase 3: Migrate Purchase Flow",id:"phase-3-migrate-purchase-flow",level:3},{value:"Platform-Specific Considerations",id:"platform-specific-considerations",level:2},{value:"iOS Differences",id:"ios-differences",level:3},{value:"Android Differences",id:"android-differences",level:3},{value:"Common Migration Challenges",id:"common-migration-challenges",level:2},{value:"1. State Management",id:"1-state-management",level:3},{value:"2. Async Patterns",id:"2-async-patterns",level:3},{value:"3. Platform Handling",id:"3-platform-handling",level:3},{value:"4. Error Handling",id:"4-error-handling",level:3},{value:"Testing Migration",id:"testing-migration",level:2},{value:"Benefits of Migration",id:"benefits-of-migration",level:2},{value:"Migration Checklist",id:"migration-checklist",level:2},{value:"Need Help?",id:"need-help",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"migration-from-expo-iap",children:"Migration from expo-iap"})}),"\n",(0,r.jsx)(n.p,{children:"This guide helps you migrate from expo-iap to flutter_inapp_purchase, highlighting key differences and providing migration strategies."}),"\n",(0,r.jsx)(n.h2,{id:"key-differences",children:"Key Differences"}),"\n",(0,r.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap (React Native/Expo):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Hook-based architecture (",(0,r.jsx)(n.code,{children:"useIAP"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Built for Expo/React Native ecosystem"}),"\n",(0,r.jsx)(n.li,{children:"JavaScript/TypeScript"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase (Flutter):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Stream-based architecture"}),"\n",(0,r.jsx)(n.li,{children:"Built for Flutter ecosystem"}),"\n",(0,r.jsx)(n.li,{children:"Dart language"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-comparison",children:"API Comparison"}),"\n",(0,r.jsx)(n.h3,{id:"initialization",children:"Initialization"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { useIAP } from "expo-iap";\n\nfunction MyStore() {\n  const { connected, products, getProducts } = useIAP();\n\n  useEffect(() => {\n    if (connected) {\n      getProducts(productIds);\n    }\n  }, [connected]);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_inapp_purchase/flutter_inapp_purchase.dart';\n\nclass MyStore extends StatefulWidget {\n  @override\n  _MyStoreState createState() => _MyStoreState();\n}\n\nclass _MyStoreState extends State<MyStore> {\n  List<IapItem> products = [];\n\n  @override\n  void initState() {\n    super.initState();\n    _initializeStore();\n  }\n\n  Future<void> _initializeStore() async {\n    await FlutterInappPurchase.instance.initialize();\n    products = await FlutterInappPurchase.instance.getProducts(productIds);\n    setState(() {});\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"product-fetching",children:"Product Fetching"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Fetch products by type\nconst products = await getProducts({\n  skus: ["product1", "product2"],\n  type: "inapp",\n});\n\n// Fetch subscriptions\nconst subscriptions = await getProducts({\n  skus: ["sub1", "sub2"],\n  type: "subs",\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"// Fetch products\nfinal products = await FlutterInappPurchase.instance\n    .requestProducts(skus: ['product1', 'product2'], type: 'inapp');\n\n// Fetch subscriptions\nfinal subscriptions = await FlutterInappPurchase.instance\n    .requestProducts(skus: ['sub1', 'sub2'], type: 'subs');\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-flow",children:"Purchase Flow"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const { requestPurchase, currentPurchase, finishTransaction } = useIAP();\n\n// Request purchase\nawait requestPurchase({\n  request: {\n    sku: "product1",\n  },\n  type: "inapp",\n});\n\n// Handle purchase completion\nuseEffect(() => {\n  if (currentPurchase) {\n    const completePurchase = async () => {\n      // Deliver content\n      await deliverProduct(currentPurchase);\n\n      // Finish transaction\n      await finishTransaction({\n        purchase: currentPurchase,\n        isConsumable: true,\n      });\n    };\n\n    completePurchase();\n  }\n}, [currentPurchase]);\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"StreamSubscription? _purchaseSubscription;\n\n@override\nvoid initState() {\n  super.initState();\n\n  // Listen to purchase updates\n  _purchaseSubscription = FlutterInappPurchase\n      .purchaseUpdated.listen((productItem) {\n    if (productItem != null) {\n      _handlePurchaseUpdate(productItem);\n    }\n  });\n}\n\n// Request purchase\nFuture<void> _requestPurchase(String productId) async {\n  await FlutterInappPurchase.instance.requestPurchase(productId);\n}\n\n// Handle purchase completion\nvoid _handlePurchaseUpdate(PurchasedItem item) async {\n  // Deliver content\n  await _deliverProduct(item);\n\n  // Finish transaction\n  if (Platform.isIOS) {\n    await FlutterInappPurchase.instance.finishTransaction(item);\n  } else {\n    // Android - consume or acknowledge\n    await FlutterInappPurchase.instance.consumePurchase(\n      purchaseToken: item.purchaseToken!,\n    );\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"data-model-mapping",children:"Data Model Mapping"}),"\n",(0,r.jsx)(n.h3,{id:"product-information",children:"Product Information"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap Product:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'interface Product {\n  id: string;\n  title: string;\n  description: string;\n  displayPrice: string;\n  currency: string;\n  type: "inapp" | "subs";\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase IapItem:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class IapItem {\n  String? productId;      // maps to id\n  String? title;          // same\n  String? description;    // same\n  String? localizedPrice; // maps to displayPrice\n  String? currency;       // same\n  // No type field - determined by method used\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-information",children:"Purchase Information"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap Purchase:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'interface Purchase {\n  id: string;\n  transactionId: string;\n  transactionDate: number;\n  transactionReceipt: string;\n  platform: "ios" | "android";\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase PurchasedItem:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class PurchasedItem {\n  String? productId;           // maps to id\n  String? transactionId;       // same\n  int? transactionDate;        // same (timestamp)\n  String? transactionReceipt;  // same\n  // Platform determined by Platform.isIOS/isAndroid\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"migration-strategy",children:"Migration Strategy"}),"\n",(0,r.jsx)(n.h3,{id:"phase-1-setup-flutter-environment",children:"Phase 1: Setup Flutter Environment"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Install Flutter SDK"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Create new Flutter project"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Add flutter_inapp_purchase dependency"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-2-port-core-logic",children:"Phase 2: Port Core Logic"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Convert hooks to StatefulWidget"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Replace useEffect with initState/lifecycle methods"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Convert async/await patterns"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-3-migrate-purchase-flow",children:"Phase 3: Migrate Purchase Flow"}),"\n",(0,r.jsx)(n.p,{children:"Here's a step-by-step migration of a typical store component:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap Store Component:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import React, { useEffect } from "react";\nimport { useIAP } from "expo-iap";\n\nexport default function Store() {\n  const {\n    connected,\n    products,\n    getProducts,\n    requestPurchase,\n    currentPurchase,\n    finishTransaction,\n  } = useIAP();\n\n  const productIds = ["coins_100", "remove_ads"];\n\n  useEffect(() => {\n    if (connected) {\n      getProducts({ skus: productIds, type: "inapp" });\n    }\n  }, [connected]);\n\n  useEffect(() => {\n    if (currentPurchase) {\n      handlePurchase();\n    }\n  }, [currentPurchase]);\n\n  const handlePurchase = async () => {\n    // Verify and deliver\n    await finishTransaction({\n      purchase: currentPurchase,\n      isConsumable: currentPurchase.id === "coins_100",\n    });\n  };\n\n  const buyProduct = async (productId: string) => {\n    await requestPurchase({\n      request: { sku: productId },\n      type: "inapp",\n    });\n  };\n\n  return (\n    <div>\n      {products.map((product) => (\n        <button key={product.id} onClick={() => buyProduct(product.id)}>\n          {product.title} - {product.displayPrice}\n        </button>\n      ))}\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Equivalent Flutter Widget:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'package:flutter_inapp_purchase/flutter_inapp_purchase.dart';\n\nclass Store extends StatefulWidget {\n  @override\n  _StoreState createState() => _StoreState();\n}\n\nclass _StoreState extends State<Store> {\n  StreamSubscription? _purchaseSubscription;\n  List<IapItem> products = [];\n  bool connected = false;\n\n  final List<String> productIds = ['coins_100', 'remove_ads'];\n\n  @override\n  void initState() {\n    super.initState();\n    _initializeStore();\n  }\n\n  @override\n  void dispose() {\n    _purchaseSubscription?.cancel();\n    super.dispose();\n  }\n\n  Future<void> _initializeStore() async {\n    try {\n      await FlutterInappPurchase.instance.initialize();\n      connected = true;\n\n      _purchaseSubscription = FlutterInappPurchase\n          .purchaseUpdated.listen(_handlePurchase);\n\n      await _getProducts();\n    } catch (e) {\n      print('Store initialization failed: $e');\n    }\n  }\n\n  Future<void> _getProducts() async {\n    if (connected) {\n      try {\n        final items = await FlutterInappPurchase.instance\n            .requestProducts(skus: productIds, type: 'inapp');\n        setState(() {\n          products = items;\n        });\n      } catch (e) {\n        print('Failed to get products: $e');\n      }\n    }\n  }\n\n  void _handlePurchase(PurchasedItem? item) async {\n    if (item == null) return;\n\n    try {\n      // Verify and deliver content here\n\n      // Finish transaction\n      if (Platform.isIOS) {\n        await FlutterInappPurchase.instance.finishTransaction(item);\n      } else {\n        // Determine if consumable\n        bool isConsumable = item.productId == 'coins_100';\n\n        if (isConsumable) {\n          await FlutterInappPurchase.instance.consumePurchase(\n            purchaseToken: item.purchaseToken!,\n          );\n        } else {\n          await FlutterInappPurchase.instance.acknowledgePurchase(\n            purchaseToken: item.purchaseToken!,\n          );\n        }\n      }\n    } catch (e) {\n      print('Failed to handle purchase: $e');\n    }\n  }\n\n  Future<void> _buyProduct(String productId) async {\n    try {\n      await FlutterInappPurchase.instance.requestPurchase(productId);\n    } catch (e) {\n      print('Purchase failed: $e');\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Store')),\n      body: ListView.builder(\n        itemCount: products.length,\n        itemBuilder: (context, index) {\n          final product = products[index];\n          return ListTile(\n            title: Text(product.title ?? ''),\n            subtitle: Text(product.localizedPrice ?? ''),\n            onTap: () => _buyProduct(product.productId!),\n          );\n        },\n      ),\n    );\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"platform-specific-considerations",children:"Platform-Specific Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"ios-differences",children:"iOS Differences"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Handles StoreKit automatically"}),"\n",(0,r.jsx)(n.li,{children:"Receipt validation built-in"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Must call ",(0,r.jsx)(n.code,{children:"finishTransaction"})," for all purchases"]}),"\n",(0,r.jsx)(n.li,{children:"Manual receipt validation setup"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-differences",children:"Android Differences"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Auto-acknowledgment handling"}),"\n",(0,r.jsx)(n.li,{children:"Simplified billing flow"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"flutter_inapp_purchase:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Manual consume/acknowledge required"}),"\n",(0,r.jsx)(n.li,{children:"More granular control over billing"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-migration-challenges",children:"Common Migration Challenges"}),"\n",(0,r.jsx)(n.h3,{id:"1-state-management",children:"1. State Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Challenge:"})," Converting React hooks to Flutter state\n",(0,r.jsx)(n.strong,{children:"Solution:"})," Use StatefulWidget or state management solutions like Provider"]}),"\n",(0,r.jsx)(n.h3,{id:"2-async-patterns",children:"2. Async Patterns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Challenge:"})," Different async handling between JS and Dart\n",(0,r.jsx)(n.strong,{children:"Solution:"})," Use Flutter's Future/Stream patterns consistently"]}),"\n",(0,r.jsx)(n.h3,{id:"3-platform-handling",children:"3. Platform Handling"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Challenge:"})," More explicit platform handling required\n",(0,r.jsx)(n.strong,{children:"Solution:"})," Use Platform.isIOS/isAndroid checks"]}),"\n",(0,r.jsx)(n.h3,{id:"4-error-handling",children:"4. Error Handling"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Challenge:"})," Different error structures\n",(0,r.jsx)(n.strong,{children:"Solution:"})," Implement comprehensive try-catch blocks"]}),"\n",(0,r.jsx)(n.h2,{id:"testing-migration",children:"Testing Migration"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unit Tests:"})," Test individual purchase functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration Tests:"})," Test complete purchase flows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform Tests:"})," Test on both iOS and Android"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Store Tests:"})," Test with sandbox/test environments"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"benefits-of-migration",children:"Benefits of Migration"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Native Performance:"})," Flutter's native compilation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single Codebase:"})," Write once, run on both platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rich UI:"})," Flutter's comprehensive widget system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Growing Ecosystem:"})," Active Flutter community"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"migration-checklist",children:"Migration Checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up Flutter development environment"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create new Flutter project structure"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Convert React components to Flutter widgets"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Migrate purchase logic to stream-based approach"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement platform-specific transaction handling"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up proper error handling"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test purchase flows on both platforms"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement receipt validation"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test with sandbox accounts"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Performance testing and optimization"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../examples/basic-store",children:"flutter_inapp_purchase Examples"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../api/overview",children:"API Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/flutter_inapp_purchase/issues",children:"GitHub Issues"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://flutter.dev/community",children:"Flutter Community"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);