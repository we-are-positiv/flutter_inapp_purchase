"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[444],{6433:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/methods/init-connection","title":"initConnection","description":"Initializes the connection to the platform\'s billing service.","source":"@site/docs/api/methods/init-connection.md","sourceDirName":"api/methods","slug":"/api/methods/init-connection","permalink":"/docs/api/methods/init-connection","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/api/methods/init-connection.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"initConnection"}}');var r=i(4848),s=i(8453);const a={sidebar_position:1,title:"initConnection"},l="initConnection()",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Signature",id:"signature",level:2},{value:"Returns",id:"returns",level:2},{value:"Throws",id:"throws",level:2},{value:"Platform Behavior",id:"platform-behavior",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Usage Example",id:"usage-example",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"State Management Example",id:"state-management-example",level:2},{value:"Related Methods",id:"related-methods",level:2},{value:"Migration Notes",id:"migration-notes",level:2},{value:"From flutter_inapp_purchase v5.x",id:"from-flutter_inapp_purchase-v5x",level:3},{value:"From expo-iap",id:"from-expo-iap",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"initconnection",children:"initConnection()"})}),"\n",(0,r.jsx)(n.p,{children:"Initializes the connection to the platform's billing service."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"initConnection()"})," method establishes a connection to the App Store (iOS) or Google Play Billing (Android). This method must be called before any other purchase-related operations."]}),"\n",(0,r.jsx)(n.h2,{id:"signature",children:"Signature"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"Future<void> initConnection()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"Future"})," that completes when the connection is established."]}),"\n",(0,r.jsx)(n.h2,{id:"throws",children:"Throws"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PurchaseError"})," with code ",(0,r.jsx)(n.code,{children:"E_ALREADY_INITIALIZED"})," if the connection is already initialized"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PurchaseError"})," with code ",(0,r.jsx)(n.code,{children:"E_NOT_INITIALIZED"})," if the initialization fails"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"platform-behavior",children:"Platform Behavior"}),"\n",(0,r.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initializes StoreKit connection"}),"\n",(0,r.jsx)(n.li,{children:"Sets up transaction observers"}),"\n",(0,r.jsx)(n.li,{children:"Checks if the device can make payments"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Initializes Google Play Billing client"}),"\n",(0,r.jsx)(n.li,{children:"Establishes connection to Google Play services"}),"\n",(0,r.jsx)(n.li,{children:"Sets up purchase update listeners"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter_inapp_purchase/flutter_inapp_purchase.dart';\n\nclass IAPService {\n  final _iap = FlutterInappPurchase.instance;\n  \n  Future<void> initialize() async {\n    try {\n      // Initialize the connection\n      await _iap.initConnection();\n      print('IAP connection initialized successfully');\n      \n      // Set up listeners after initialization\n      _setupListeners();\n      \n      // Now you can fetch products, make purchases, etc.\n      await _fetchProducts();\n      \n    } catch (e) {\n      if (e is PurchaseError) {\n        switch (e.code) {\n          case ErrorCode.E_ALREADY_INITIALIZED:\n            print('IAP already initialized');\n            break;\n          case ErrorCode.E_NOT_INITIALIZED:\n            print('Failed to initialize IAP: ${e.message}');\n            break;\n          default:\n            print('IAP error: ${e.message}');\n        }\n      }\n    }\n  }\n  \n  void _setupListeners() {\n    // Listen to purchase updates\n    FlutterInappPurchase.purchaseUpdated.listen((purchase) {\n      if (purchase != null) {\n        _handlePurchase(purchase);\n      }\n    });\n    \n    // Listen to purchase errors\n    FlutterInappPurchase.purchaseError.listen((error) {\n      if (error != null) {\n        _handleError(error);\n      }\n    });\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Initialize Early"}),": Call ",(0,r.jsx)(n.code,{children:"initConnection()"})," as early as possible in your app lifecycle, ideally when the app starts or when entering a store-related screen."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Handle Errors"}),": Always wrap the initialization in a try-catch block to handle potential errors gracefully."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Check Connection State"}),": Before making any purchase-related calls, ensure the connection is initialized."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Setup Listeners"}),": Set up purchase update and error listeners immediately after successful initialization."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"End Connection"}),": Remember to call ",(0,r.jsx)(n.code,{children:"endConnection()"})," when IAP functionality is no longer needed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"state-management-example",children:"State Management Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dart",children:"class IAPProvider extends ChangeNotifier {\n  bool _isInitialized = false;\n  bool get isInitialized => _isInitialized;\n  \n  String? _error;\n  String? get error => _error;\n  \n  Future<void> init() async {\n    if (_isInitialized) return;\n    \n    try {\n      await FlutterInappPurchase.instance.initConnection();\n      _isInitialized = true;\n      _error = null;\n      notifyListeners();\n    } catch (e) {\n      _error = e.toString();\n      _isInitialized = false;\n      notifyListeners();\n    }\n  }\n  \n  @override\n  void dispose() {\n    if (_isInitialized) {\n      FlutterInappPurchase.instance.endConnection();\n    }\n    super.dispose();\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-methods",children:"Related Methods"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"finalize()"})," - Closes the connection to the billing service"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/methods/get-products",children:(0,r.jsx)(n.code,{children:"getProducts()"})})," - Fetches available products (requires initialized connection)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/api/methods/request-purchase",children:(0,r.jsx)(n.code,{children:"requestPurchase()"})})," - Initiates a purchase (requires initialized connection)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,r.jsx)(n.h3,{id:"from-flutter_inapp_purchase-v5x",children:"From flutter_inapp_purchase v5.x"}),"\n",(0,r.jsx)(n.p,{children:"The method signature remains the same, but now includes expo-iap compatible error handling."}),"\n",(0,r.jsx)(n.h3,{id:"from-expo-iap",children:"From expo-iap"}),"\n",(0,r.jsx)(n.p,{children:"This method replaces expo-iap's initialization pattern and provides the same functionality with enhanced error reporting."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);