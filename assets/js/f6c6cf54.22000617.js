"use strict";(self.webpackChunkflutter_inapp_purchase_docs=self.webpackChunkflutter_inapp_purchase_docs||[]).push([[8992],{1427:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"api/methods/request-purchase","title":"requestPurchase","description":"Initiates a purchase flow for the specified product.","source":"@site/docs/api/methods/request-purchase.md","sourceDirName":"api/methods","slug":"/api/methods/request-purchase","permalink":"/docs/api/methods/request-purchase","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/flutter_inapp_purchase/tree/main/docs/docs/api/methods/request-purchase.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"requestPurchase"}}');var i=n(4848),t=n(8453);const a={sidebar_position:4,title:"requestPurchase"},c="requestPurchase()",o={},u=[{value:"Overview",id:"overview",level:2},{value:"Signature",id:"signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Request Structure",id:"request-structure",level:2},{value:"RequestPurchase",id:"requestpurchase-1",level:3},{value:"RequestPurchaseIOS",id:"requestpurchaseios",level:3},{value:"RequestPurchaseAndroid",id:"requestpurchaseandroid",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Purchase",id:"basic-purchase",level:3},{value:"Purchase with User Identifier",id:"purchase-with-user-identifier",level:3},{value:"Subscription with Promotional Offer (iOS)",id:"subscription-with-promotional-offer-ios",level:3},{value:"Subscription Upgrade/Downgrade (Android)",id:"subscription-upgradedowngrade-android",level:3},{value:"Complete Implementation",id:"complete-implementation",level:2},{value:"Handling Purchase Results",id:"handling-purchase-results",level:2},{value:"Android Proration Modes",id:"android-proration-modes",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Related Methods",id:"related-methods",level:2},{value:"Platform Notes",id:"platform-notes",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"requestpurchase",children:"requestPurchase()"})}),"\n",(0,i.jsx)(r.p,{children:"Initiates a purchase flow for the specified product."}),"\n",(0,i.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"requestPurchase()"})," method starts the platform's native purchase flow for a product. It handles both one-time purchases and subscriptions with platform-specific options."]}),"\n",(0,i.jsx)(r.h2,{id:"signature",children:"Signature"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"Future<void> requestPurchase({\n  required RequestPurchase request,\n  required PurchaseType type,\n})\n"})}),"\n",(0,i.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"request"})," - Platform-specific purchase request parameters"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"type"})," - Type of purchase (",(0,i.jsx)(r.code,{children:"PurchaseType.inapp"})," or ",(0,i.jsx)(r.code,{children:"PurchaseType.subs"}),")"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"request-structure",children:"Request Structure"}),"\n",(0,i.jsx)(r.h3,{id:"requestpurchase-1",children:"RequestPurchase"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"class RequestPurchase {\n  final RequestPurchaseIOS? ios;\n  final RequestPurchaseAndroid? android;\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"requestpurchaseios",children:"RequestPurchaseIOS"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"class RequestPurchaseIOS {\n  final String sku;                    // Product ID\n  final int? quantity;                 // Quantity (for consumables)\n  final String? appAccountToken;       // User identifier\n  final Map<String, dynamic>? withOffer; // Promotional offer\n}\n"})}),"\n",(0,i.jsx)(r.h3,{id:"requestpurchaseandroid",children:"RequestPurchaseAndroid"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"class RequestPurchaseAndroid {\n  final List<String> skus;             // Product IDs\n  final String? obfuscatedAccountIdAndroid;  // User identifier\n  final String? obfuscatedProfileIdAndroid;  // Profile identifier\n  final String? purchaseToken;         // For upgrades/downgrades\n  final int? offerTokenIndex;          // Specific offer index\n  final int? prorationMode;            // Subscription proration\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(r.h3,{id:"basic-purchase",children:"Basic Purchase"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"// Simple product purchase\nawait FlutterInappPurchase.instance.requestPurchase(\n  request: RequestPurchase(\n    ios: RequestPurchaseIOS(sku: 'com.example.premium'),\n    android: RequestPurchaseAndroid(skus: ['com.example.premium']),\n  ),\n  type: PurchaseType.inapp,\n);\n"})}),"\n",(0,i.jsx)(r.h3,{id:"purchase-with-user-identifier",children:"Purchase with User Identifier"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"// Purchase with user account token for restoration\nawait FlutterInappPurchase.instance.requestPurchase(\n  request: RequestPurchase(\n    ios: RequestPurchaseIOS(\n      sku: 'com.example.premium',\n      appAccountToken: userId, // Your user ID\n    ),\n    android: RequestPurchaseAndroid(\n      skus: ['com.example.premium'],\n      obfuscatedAccountIdAndroid: userId,\n    ),\n  ),\n  type: PurchaseType.inapp,\n);\n"})}),"\n",(0,i.jsx)(r.h3,{id:"subscription-with-promotional-offer-ios",children:"Subscription with Promotional Offer (iOS)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"// iOS subscription with promotional offer\nawait FlutterInappPurchase.instance.requestPurchase(\n  request: RequestPurchase(\n    ios: RequestPurchaseIOS(\n      sku: 'com.example.monthly',\n      withOffer: {\n        'identifier': 'promo_50_off',\n        'keyIdentifier': 'ABCDEF123456',\n        'nonce': generateNonce(),\n        'signature': generateSignature(), // Server-generated\n        'timestamp': DateTime.now().millisecondsSinceEpoch,\n      },\n    ),\n  ),\n  type: PurchaseType.subs,\n);\n"})}),"\n",(0,i.jsx)(r.h3,{id:"subscription-upgradedowngrade-android",children:"Subscription Upgrade/Downgrade (Android)"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"// Android subscription change with proration\nawait FlutterInappPurchase.instance.requestPurchase(\n  request: RequestPurchase(\n    android: RequestPurchaseAndroid(\n      skus: ['com.example.yearly'],\n      purchaseToken: currentSubscriptionToken,\n      prorationMode: AndroidProrationMode.IMMEDIATE_AND_CHARGE_PRORATED_PRICE,\n    ),\n  ),\n  type: PurchaseType.subs,\n);\n"})}),"\n",(0,i.jsx)(r.h2,{id:"complete-implementation",children:"Complete Implementation"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"class PurchaseService {\n  final _iap = FlutterInappPurchase.instance;\n  \n  Future<void> purchaseProduct(String productId, {bool isSubscription = false}) async {\n    try {\n      // Create platform-specific request\n      final request = RequestPurchase(\n        ios: RequestPurchaseIOS(\n          sku: productId,\n          appAccountToken: await _getUserId(),\n        ),\n        android: RequestPurchaseAndroid(\n          skus: [productId],\n          obfuscatedAccountIdAndroid: await _getUserId(),\n        ),\n      );\n      \n      // Initiate purchase\n      await _iap.requestPurchase(\n        request: request,\n        type: isSubscription ? PurchaseType.subs : PurchaseType.inapp,\n      );\n      \n      // Purchase result will be received via purchaseUpdated stream\n      \n    } on PurchaseError catch (e) {\n      _handlePurchaseError(e);\n    } catch (e) {\n      print('Unexpected error: $e');\n    }\n  }\n  \n  void _handlePurchaseError(PurchaseError error) {\n    switch (error.code) {\n      case ErrorCode.E_USER_CANCELLED:\n        print('User cancelled the purchase');\n        break;\n      case ErrorCode.E_PRODUCT_ALREADY_OWNED:\n        print('Product already owned');\n        break;\n      case ErrorCode.E_BILLING_UNAVAILABLE:\n        print('Billing service unavailable');\n        break;\n      default:\n        print('Purchase error: ${error.message}');\n    }\n  }\n  \n  Future<String?> _getUserId() async {\n    // Return your user identifier\n    return 'user123';\n  }\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"handling-purchase-results",children:"Handling Purchase Results"}),"\n",(0,i.jsx)(r.p,{children:"Purchase results are delivered through streams:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"// Listen to successful purchases\nFlutterInappPurchase.purchaseUpdated.listen((PurchasedItem? item) {\n  if (item != null) {\n    print('Purchase successful: ${item.productId}');\n    \n    // Verify the purchase\n    _verifyPurchase(item);\n    \n    // Deliver the content\n    _deliverContent(item.productId);\n    \n    // Finish the transaction\n    _finishTransaction(item);\n  }\n});\n\n// Listen to purchase errors\nFlutterInappPurchase.purchaseError.listen((PurchaseResult? error) {\n  if (error != null) {\n    print('Purchase failed: ${error.message}');\n  }\n});\n"})}),"\n",(0,i.jsx)(r.h2,{id:"android-proration-modes",children:"Android Proration Modes"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"class AndroidProrationMode {\n  static const int IMMEDIATE_AND_CHARGE_FULL_PRICE = 5;\n  static const int DEFERRED = 4;\n  static const int IMMEDIATE_AND_CHARGE_PRORATED_PRICE = 2;\n  static const int IMMEDIATE_WITHOUT_PRORATION = 3;\n  static const int IMMEDIATE_WITH_TIME_PRORATION = 1;\n  static const int UNKNOWN_SUBSCRIPTION_UPGRADE_DOWNGRADE_POLICY = 0;\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"User Identification"}),": Always include a user identifier for purchase restoration"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Error Handling"}),": Implement comprehensive error handling for all failure cases"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Loading State"}),": Show loading indicator during purchase flow"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Double Purchase Prevention"}),": Disable purchase button after click"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-dart",children:"Future<void> safePurchase(String productId) async {\n  // Prevent double purchases\n  if (_isPurchasing) return;\n  _isPurchasing = true;\n  \n  try {\n    await _iap.requestPurchase(\n      request: RequestPurchase(\n        ios: RequestPurchaseIOS(sku: productId),\n        android: RequestPurchaseAndroid(skus: [productId]),\n      ),\n      type: PurchaseType.inapp,\n    );\n  } catch (e) {\n    // Handle errors\n    if (e is PurchaseError) {\n      switch (e.code) {\n        case ErrorCode.E_NOT_INITIALIZED:\n          // Reinitialize connection\n          await _iap.initConnection();\n          break;\n        case ErrorCode.E_ITEM_UNAVAILABLE:\n          // Product not available\n          showError('Product not available');\n          break;\n        default:\n          showError(e.message);\n      }\n    }\n  } finally {\n    _isPurchasing = false;\n  }\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"related-methods",children:"Related Methods"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/docs/api/methods/get-products",children:(0,i.jsx)(r.code,{children:"getProducts()"})})," - Fetch products before purchasing"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/docs/api/methods/finish-transaction",children:(0,i.jsx)(r.code,{children:"finishTransaction()"})})," - Complete the purchase"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/docs/api/methods/request-subscription",children:(0,i.jsx)(r.code,{children:"requestSubscription()"})})," - Legacy subscription method"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"platform-notes",children:"Platform Notes"}),"\n",(0,i.jsx)(r.h3,{id:"ios",children:"iOS"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Requires valid product IDs from App Store Connect"}),"\n",(0,i.jsx)(r.li,{children:"Promotional offers need server-side signature"}),"\n",(0,i.jsx)(r.li,{children:"Quantity only works for consumable products"}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"android",children:"Android"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Supports multiple SKUs but typically uses one"}),"\n",(0,i.jsx)(r.li,{children:"Proration modes only apply to subscriptions"}),"\n",(0,i.jsx)(r.li,{children:"Requires acknowledgment within 3 days"}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var s=n(6540);const i={},t=s.createContext(i);function a(e){const r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);